{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/core/services/http/artist.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nexport let ArtistFormComponent = /*#__PURE__*/(() => {\n  class ArtistFormComponent {\n    constructor(fb, _artistService, _dialogRef, data) {\n      this.fb = fb;\n      this._artistService = _artistService;\n      this._dialogRef = _dialogRef;\n      this.data = data;\n      this.formAction = data.toUpdate ? \"Update\" : \"Add\";\n\n      if (data.toUpdate) {\n        this.artistForm = this.fb.group({\n          name: [data.artist.name, [Validators.required, this.noWhitespaceValidator]],\n          description: [data.artist.description, [Validators.required, this.noWhitespaceValidator]],\n          yearsactive: [data.artist.yearsactive, [Validators.required]]\n        });\n      } else {\n        this.artistForm = this.fb.group({\n          name: ['', [Validators.required, this.noWhitespaceValidator]],\n          description: ['', [Validators.required]],\n          yearsactive: ['2021', [Validators.required]]\n        });\n      }\n    }\n\n    ngOnInit() {}\n\n    onSubmit(artist) {\n      if (this.artistForm.valid) {\n        if (this.data.toUpdate) {\n          artist.id = this.data.artist.id;\n\n          this._artistService.put(artist).subscribe(next => {\n            console.log(\"dang bro WE HAVE updated artist\");\n            this.artistForm.reset();\n\n            this._dialogRef.close();\n          });\n        } else {\n          this._artistService.post(artist).subscribe(next => {\n            console.log(\"hell yes dude WE HAVE ADDED A NEW artist\");\n            this.artistForm.reset();\n\n            this._dialogRef.close();\n          });\n        }\n      }\n    }\n\n    noWhitespaceValidator(control) {\n      const isWhitespace = (control.value || '').trim().length === 0;\n      const isValid = !isWhitespace;\n      return isValid ? null : {\n        'whitespace': true\n      };\n    }\n\n  }\n\n  ArtistFormComponent.ɵfac = function ArtistFormComponent_Factory(t) {\n    return new (t || ArtistFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ArtistService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  ArtistFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ArtistFormComponent,\n    selectors: [[\"app-artist-form\"]],\n    decls: 24,\n    vars: 3,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"mat-dialog-title\", \"\", 2, \"text-align\", \"center\"], [1, \"mat-typography\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"placeholder\", \"Artist\", \"type\", \"text\", \"formControlName\", \"name\", \"required\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Description\", \"type\", \"text\", \"formControlName\", \"description\", \"required\", \"\"], [\"matInput\", \"\", \"placeholder\", \"2020\", \"type\", \"number\", \"formControlName\", \"yearsactive\", \"required\", \"\"], [\"align\", \"end\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\"], [\"mat-button\", \"\", \"type\", \"submit\", \"cdkFocusInitial\", \"\", 3, \"disabled\"]],\n    template: function ArtistFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ArtistFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit(ctx.artistForm.value);\n        });\n        i0.ɵɵelementStart(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Artist\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-dialog-content\", 2)(4, \"div\")(5, \"mat-form-field\", 3)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Artist\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\")(10, \"mat-form-field\", 3)(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\")(15, \"mat-form-field\", 3)(16, \"mat-label\");\n        i0.ɵɵtext(17, \"Years active\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"mat-dialog-actions\", 7)(20, \"button\", 8);\n        i0.ɵɵtext(21, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 9);\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.artistForm);\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"disabled\", !ctx.artistForm.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.formAction);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i3.MatDialogTitle, i3.MatDialogContent, i4.MatFormField, i4.MatLabel, i5.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i1.NumberValueAccessor, i3.MatDialogActions, i6.MatButton, i3.MatDialogClose],\n    styles: [\"\"]\n  });\n  return ArtistFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}